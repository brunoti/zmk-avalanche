#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <400>;
    quick-tap-ms = <100>;
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;

            // <---[[moderate duration]]

            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        layer_plus: layer_plus {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_PLUS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
    };

    macros {
        macro_vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <5>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp ENTER>;
            label = "VIM_SAVE";
        };

        macro_previous_folder: macro_previous_folder {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <5>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "MACRO_PREVIOUS_FOLDER";
        };

        macro_vim_replace: replace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp PERCENT &kp S &kp SLASH>;
            label = "REPLACE";
        };

        macro_paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "PASTE";
        };

        macro_copy: macro_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "MACRO_COPY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------------------
            //            |  `  |  1  |  2  |  3  |  4  |  5  |                                             |  6  |  7  |  8  |  9  |  0  |  '  |
            //            | TAB |  Q  |  W  |  E  |  R  |  T  |                                             |  Y  |  U  |  I  |  O  |  P  |  [  | 
            //    |  ESC  |CTRL |  A  |  S  |  D  |  F  |  G  |                                             |  H  |  J  |  K  |  L  |  ;  |  '  |  \   |
            //            |SHIFT|  Z  |  X  |  C  |  V  |  B  |  DEL  |                              | BSPC |  N  |  M  |  ,  |  .  |  /  |  -  |
            //                        | GUI | ALT |SPACE|RAISE| ENTER |                              | ENTER|  =  |SPACE|MO(1)|MO(2)|
            // ---------------------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&kp GRAVE     &kp N1                &kp N2           &kp N3     &kp N4          &kp N5                        &kp N6     &kp N7           &kp N8     &kp N9  &kp N0             &kp SQT
&kp TAB       &kp Q                 &layer_plus 5 W  &kp E      &kp R           &kp T                         &kp Y      &kp U            &kp I      &kp O   &kp P              &kp MINUS
&kp LEFT_ALT  &hm LEFT_CONTROL ESC  &kp A            &kp S      &kp D           &kp F      &kp G                         &kp H            &kp J      &kp K   &kp L              &kp SEMICOLON  &kp EQUAL  &kp RIGHT_GUI
&kp LEFT_GUI  &kp Z                 &kp X            &kp C      &kp V           &kp B      &kp DELETE  &mo 2  &mo 1      &kp BACKSPACE    &kp N      &kp M   &kp COMMA          &kp PERIOD     &kp FSLH   &kp RIGHT_CONTROL
              &kp K_MUTE            &mo 4            &kp SPACE  &kp LEFT_SHIFT  &kp ENTER                     &kp ENTER  &kp RIGHT_SHIFT  &kp SPACE  &mo 3   &kp RIGHT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &trans              &trans                           &rgb_ug RGB_COLOR_HSB(308,100,50)  &rgb_ug RGB_COLOR_HSB(334,100,50)  &rgb_ug RGB_COLOR_HSB(121,100,48)  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_HUI
&trans  &kp HOME      &kp UP_ARROW    &kp END         &macro_vim_replace  &trans                           &rgb_ug RGB_COLOR_HSB(0,100,50)    &rgb_ug RGB_COLOR_HSB(182,100,50)  &rgb_ug RGB_COLOR_HSB(251,100,49)  &trans           &rgb_ug RGB_SAD  &rgb_ug RGB_SAI
&trans  &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT           &trans           &trans                                             &trans                             &trans                             &trans           &trans           &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &bt BT_CLR
&trans  &trans        &trans          &trans          &trans              &trans           &trans  &trans  &trans                             &trans                             &rgb_ug RGB_EFR                    &rgb_ug RGB_EFF  &trans           &trans           &rgb_ug RGB_SPD  &rgb_ug RGB_SPI
        &trans        &trans          &trans          &trans              &macro_vim_save                  &trans                             &trans                             &trans                             &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        NUMBERS {
            // ---------------------------------------------------------------------------------------------------------------------------------------------
            //            |     |     |     |     |     |     |                                          |     |     |     |     |     |     |
            //            |     | HOME|  UP | END |     |     |                                          |     |HOME |     |END  |     |     |
            //       |    |     | LEFT| DOWN|RIGHT|     |     |                                          |SCLUP|LEFT |  UP |  A  |PG_UP|     |    |
            //            |     |     |     |     |     |     |     |                              |     |SCLDN|LEFT | DOWN|RIGHT|PG_DN|     |
            //                        |     |     |     |     |     |                              |     |     |     |     |     |
            // ---------------------------------------------------------------------------------------------------------------------------------------------

            bindings = <
&none   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                 &kp F6        &kp F7     &kp F8        &kp F9        &kp F10       &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans  &none                  &kp ASTERISK  &kp N7     &kp N8        &kp N9        &kp PLUS      &none
&trans  &trans  &trans  &trans  &trans  &none   &none                        &kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS        &none      &none
&trans  &none   &none   &none   &none   &trans  &trans  &none  &none         &trans     &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp EQUAL  &none
        &trans  &trans  &trans  &trans  &trans                 &trans        &trans     &trans        &trans        &kp NUMBER_0
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SYMBOLS {
            bindings = <
&none            &none           &none              &none       &none          &none                              &none          &none      &none             &none                 &none                  &none
&none            &kp APOS        &kp DOUBLE_QUOTES  &kp ASTRK   &kp LESS_THAN  &kp GREATER_THAN                   &kp AMPERSAND  &kp TILDE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp PERCENT            &none
&macro_vim_save  &kp UNDERSCORE  &kp EXCLAMATION    &kp MINUS   &kp PLUS       &kp EQUAL         &kp HASH                        &kp PIPE   &kp COLON         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION     &none        &none
&none            &kp CARET       &kp COMMA          &kp PERIOD  &kp BACKSLASH  &kp GRAVE         &none     &none  &none          &none      &kp SLASH         &kp DOLLAR            &kp LEFT_BRACE         &kp RIGHT_BRACE  &kp AT_SIGN  &none
                 &none           &none              &none       &none          &none                              &none          &none      &none             &none                 &none
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans       &trans        &trans         &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &macro_copy  &macro_paste  &kp LG(Z)      &kp LG(A)          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans       &trans        &trans         &trans             &trans         &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans        &kp RIGHT_GUI  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp LG(SPACE)  &trans
        &trans  &trans  &trans  &trans  &trans                  &trans  &trans       &trans        &trans         &trans
            >;
        };

        w_layer {
            bindings = <
&none  &none  &none  &none  &none  &none                &none  &none         &none                   &none                   &none                    &none
&none  &none  &none  &none  &none  &none                &none  &kp LS(LEFT)  &kp LS(RIGHT_ARROW)     &none                   &none                    &none
&none  &none  &none  &none  &none  &none  &none                &none         &kp LS(LG(LEFT_ARROW))  &kp LS(LA(LEFT_ARROW))  &kp LS(LA(RIGHT_ARROW))  &kp LS(LG(RIGHT_ARROW))  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none         &none                   &none                   &none                    &none                    &none  &none
       &none  &none  &none  &none  &none                &none  &none         &none                   &none                   &none
            >;
        };
    };
};
